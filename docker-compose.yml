version: '3'

#env file is ./.env
services:
    front-end:
        restart: "unless-stopped"
        container_name: "dash-label"
        user: "${UID}:${GID}" #from .env file
        build: 
            context: 'front/'
            dockerfile: 'docker/Dockerfile'
        command: 'python src/index.py'
            #command: 'sleep 60000'
        environment:
            AMQP_URL: 'amqp://rabbit?connection_attempts=5&retry_delay=5'
        depends_on:
            - "rabbit"
        volumes: #relative to where docker-compose is run, NOT context
            - "data-m:/app/work/data"
            - "./front/src:/app/work/src"
        ports:
            - '8052:8050'
    data-service:
        restart: 'unless-stopped'
        container_name: 'data_service'
        #user: "${UID}:${GID}"
        build:
            context: "data_service"
        volumes:
            - "data-m:/working/data"
        command: "sleep 5000"
    rabbit:
        restart: "unless-stopped"
        image: 'rabbitmq:3-management'
        ports:
            - "5672:5672"
            - "15672:15672"

    consumer:
        #        user: "${UID}:${GID}" #from .env file
        restart: "unless-stopped"
        container_name: "compute_launcher"
        build:
            context: "compute_launcher"
            #allow this container to launch sister containers
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "./compute_launcher:/app"
              #- "./dash-seg/data:/data"
            - "data-m:/data"
        environment:
            AMQP_URL: 'amqp://rabbit?connection_attempts=5&retry_delay=5'
            #AMQP_URL: 'amqp://guest:guest@rabbit'
            DATA_DIR: "${COMPOSE_PROJECT_NAME}_data-m"
        depends_on:
            - "rabbit"
volumes: #create named dir and link it to the data folder, so all services can use
    data-m:
        driver: local
        driver_opts:
            type: "none"
            device: "${PWD}/../data/"
            o: "bind"
        


        
              #        #    ml:
        #        build: './ml_backend/docker/'
        #        ulimits:
        #            memlock: -1
        #            stack: 67108864
        #        volumes:
        #            - '${PWD}/ml_backend:/work/'
        #        ports:
        #            - '8006:8000'
        #        shm_size: '1g'
        #        runtime: nvidia
        #        environment:
        #            NVIDIA_VISIBLE_DEVICES: all
        #            NVIDIA_DRIVER_CAPABILITIES: all
        #        deploy:
        #            resources:
        #                reservations:
        #                    devices:
        #                        - capabilities:
        #                            - gpu
        #
